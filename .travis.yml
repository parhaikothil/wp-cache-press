sudo: false
dist: trusty

language: php

cache:
  apt: true
  directories:
    - vendor
    - $HOME/.composer/cache

matrix:
  fast_finish: true
  include:
    - php: 5.3
      sudo: required
      dist: precise
      env: WP_VERSION=4.0
    - php: 5.3
      sudo: required
      dist: precise
      env: WP_VERSION=latest
    - php: 5.4
      env: WP_VERSION=4.0
    - php: 5.4
      env: WP_VERSION=latest
    - php: 5.5
      env: WP_VERSION=4.0
    - php: 5.5
      env: WP_VERSION=latest
    - php: 5.6
      env: WP_VERSION=4.0
    - php: 5.6
      env: WP_VERSION=latest
    - php: 7.0
      env: WP_VERSION=4.0
    - php: 7.0
      env: WP_VERSION=latest
    - php: 7.1
      env: WP_VERSION=4.0
    - php: 7.1
      env: WP_VERSION=latest
    - php: 5.6
      env: TRAVISCI=phpcs
  allow_failures:
    - php: 5.6
      env: TRAVISCI=phpcs

before_install:
  - |
    # Remove Xdebug for a huge performance increase:
    if [ -f ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini ]; then
      phpenv config-rm xdebug.ini
    else
      echo "xdebug.ini does not exist"
    fi
  - |
    # Install WordPress instance tests:
    if [[ ! -z "$WP_VERSION" ]] ; then
      bash bin/install-wp-tests.sh wordpress_test root '' localhost $WP_VERSION
    fi

before_script:
  - |
    # Export Composer's global bin dir to PATH:
    composer config --list --global
    export PATH=`composer config --list --global | grep '\[home\]' | { read a; echo "${a#* }/vendor/bin:$PATH"; }`
  - |
    # Install the specified version of PHPUnit depending on the PHP version:
    if [[ ! -z "$WP_VERSION" ]] ; then
      case "$TRAVIS_PHP_VERSION" in
        nightly|7.2)
          echo "Using PHPUnit 6.x"
          composer global require "phpunit/phpunit:^6"
          ;;
        7.1|7.0|5.6)
          echo "Using PHPUnit 5.x"
          composer global require "phpunit/phpunit:^5"
          ;;
        5.5|5.4|5.3)
          echo "Using PHPUnit 4.x"
          composer global require "phpunit/phpunit:^4"
          ;;
        *)
          echo "No PHPUnit version handling for PHP version $TRAVIS_PHP_VERSION"
          exit 1
          ;;
      esac
    fi
  - |
    # Preparation for PHPCS:
    if [[ "$TRAVISCI" == "phpcs" ]] ; then
      composer install
    fi

script:
  - |
    # Run PHPUnit tests:
    if [[ ! -z "$WP_VERSION" ]] ; then
      # Run single-site tests:
      export WP_MULTISITE=0
      phpunit || exit 1
      # Run multi-site tests:
      export WP_MULTISITE=1
      phpunit || exit 1
    fi
  - |
    # Run PHPCS tests:
    if [[ "$TRAVISCI" == "phpcs" ]] ; then
      ./vendor/bin/phpcs
    fi

notifications:
  email:
    on_start: never
    on_failure: always
    on_success: change
    on_pull_requests: false
